{"version":3,"file":"ng-chat.umd.js.map","sources":["ng://ng-chat/ng-chat/core/chat-adapter.ts","ng://ng-chat/ng-chat/core/message-type.enum.ts","ng://ng-chat/ng-chat/core/message.ts","ng://ng-chat/ng-chat/core/chat-participant-status.enum.ts","ng://ng-chat/ng-chat/core/chat-participant-type.enum.ts","ng://ng-chat/ng-chat/core/user.ts","ng://ng-chat/ng-chat/core/participant-response.ts","ng://ng-chat/ng-chat/core/participant-metadata.ts","ng://ng-chat/ng-chat/core/window.ts","node_modules/tslib/tslib.es6.js","ng://ng-chat/ng-chat/core/paged-history-chat-adapter.ts","ng://ng-chat/ng-chat/core/theme.enum.ts","ng://ng-chat/ng-chat/core/guid.ts","ng://ng-chat/ng-chat/core/group.ts","ng://ng-chat/ng-chat/core/scroll-direction.enum.ts","ng://ng-chat/ng-chat/core/default-file-upload-adapter.ts","ng://ng-chat/ng-chat/ng-chat.component.ts","ng://ng-chat/ng-chat/pipes/emojify.pipe.ts","ng://ng-chat/ng-chat/pipes/linkfy.pipe.ts","ng://ng-chat/ng-chat/pipes/group-message-display-name.pipe.ts","ng://ng-chat/ng-chat/components/ng-chat-options/ng-chat-options.component.ts","ng://ng-chat/ng-chat/ng-chat.module.ts"],"sourcesContent":["import { Observable } from 'rxjs';\nimport { Message } from \"./message\";\nimport { User } from \"./user\";\nimport { ParticipantResponse } from \"./participant-response\";\nimport { IChatParticipant } from './chat-participant';\n\nexport abstract class ChatAdapter\n{\n    // ### Abstract adapter methods ###\n\n    public abstract listFriends(): Observable<ParticipantResponse[]>;\n    \n    public abstract getMessageHistory(destinataryId: any): Observable<Message[]>;\n\n    public abstract sendMessage(message: Message): void;\n\n    // ### Adapter/Chat income/ingress events ###\n\n    public onFriendsListChanged(participantsResponse: ParticipantResponse[]): void\n    {\n        this.friendsListChangedHandler(participantsResponse);\n    }\n\n    public onMessageReceived(participant: IChatParticipant, message: Message): void\n    {\n        this.messageReceivedHandler(participant, message);\n    }\n    \n    // Event handlers\n    friendsListChangedHandler: (participantsResponse: ParticipantResponse[]) => void  = (participantsResponse: ParticipantResponse[]) => {};\n    messageReceivedHandler: (participant: IChatParticipant, message: Message) => void = (participant: IChatParticipant, message: Message) => {};\n}\n","export enum MessageType\n{\n    Text = 1,\n    File = 2\n}\n","import { MessageType } from './message-type.enum';\n\nexport class Message\n{\n    public type?: MessageType = MessageType.Text;\n    public fromId: any;\n    public toId: any;\n    public message: string;\n    public dateSent?: Date;\n    public dateSeen?: Date;\n}\n","export enum ChatParticipantStatus\n{\n    Online,\n    Busy,\n    Away,\n    Offline\n}\n","export enum ChatParticipantType\n{\n    User,\n    Group\n}\n","import { ChatParticipantStatus } from \"./chat-participant-status.enum\";\nimport { IChatParticipant } from \"./chat-participant\";\nimport { ChatParticipantType } from \"./chat-participant-type.enum\";\n\nexport class User implements IChatParticipant\n{\n    public readonly participantType: ChatParticipantType = ChatParticipantType.User;\n    public id: any;\n    public displayName: string;\n    public status: ChatParticipantStatus;\n    public avatar: string;\n}\n","import { User } from \"./user\";\nimport { ParticipantMetadata } from \"./participant-metadata\";\nimport { IChatParticipant } from \"./chat-participant\";\n\nexport class ParticipantResponse\n{\n    public participant: IChatParticipant;\n    public metadata: ParticipantMetadata;\n}\n","export class ParticipantMetadata\n{\n    public totalUnreadMessages: number = 0;\n}\n","import { Message } from \"./message\";\nimport { User } from \"./user\";\nimport { ChatParticipantType } from \"./chat-participant-type.enum\";\nimport { ChatParticipantStatus } from \"./chat-participant-status.enum\";\nimport { Group } from \"./group\";\nimport { IChatParticipant } from \"./chat-participant\";\n\nexport class Window\n{\n    constructor(participant: IChatParticipant, isLoadingHistory: boolean, isCollapsed: boolean)\n    {\n        this.participant = participant;\n        this.messages =  [];\n        this.isLoadingHistory = isLoadingHistory;\n        this.hasFocus = false; // This will be triggered when the 'newMessage' input gets the current focus\n        this.isCollapsed = isCollapsed;\n        this.hasMoreMessages = false;\n        this.historyPage = 0;\n    }\n\n    public participant: IChatParticipant;    \n    public messages: Message[] = [];\n    public newMessage?: string = \"\";\n\n    // UI Behavior properties\n    public isCollapsed?: boolean = false; \n    public isLoadingHistory: boolean = false;\n    public hasFocus: boolean = false;\n    public hasMoreMessages: boolean = true;\n    public historyPage: number = 0;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Observable } from 'rxjs';\nimport { Message } from \"./message\";\nimport { User } from \"./user\";\nimport { ChatAdapter } from \"./chat-adapter\";\n\n/**\n * @description Chat Adapter decorator class that adds pagination to load the history of messagesr. \n * You will need an existing @see ChatAdapter implementation\n */\nexport abstract class PagedHistoryChatAdapter extends ChatAdapter\n{   \n    abstract getMessageHistoryByPage(destinataryId: any, size: number, page: number) : Observable<Message[]>;\n}\n","export enum Theme\n{\n    Custom = 'custom-theme',\n    Light = 'light-theme',\n    Dark = 'dark-theme'\n}\n","// Poached from: https://github.com/Steve-Fenton/TypeScriptUtilities\n// @dynamic\nexport class Guid {\n    static newGuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n            return v.toString(16);\n        });\n    }\n}\n","import { Guid } from \"./guid\";\nimport { User } from \"./user\";\nimport { ChatParticipantStatus } from \"./chat-participant-status.enum\";\nimport { IChatParticipant } from \"./chat-participant\";\nimport { ChatParticipantType } from \"./chat-participant-type.enum\";\n\nexport class Group implements IChatParticipant\n{\n    constructor(participants: User[])\n    {   \n        this.chattingTo = participants;\n        this.status = ChatParticipantStatus.Online;\n\n        // TODO: Add some customization for this in future releases\n        this.displayName = participants.map((p) => p.displayName).sort((first, second) => second > first ? -1 : 1).join(\", \");\n    }\n\n    public id: string = Guid.newGuid();\n    public chattingTo: User[];\n\n    public readonly participantType: ChatParticipantType = ChatParticipantType.Group;\n\n    public status: ChatParticipantStatus;\n    public avatar: string | null;\n    public displayName: string;\n}\n","export enum ScrollDirection {\n    Top,\n    Bottom\n}","import { IFileUploadAdapter } from './file-upload-adapter';\nimport { HttpClient, HttpRequest, HttpEventType, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { User } from './user';\nimport { Message } from './message';\n\nexport class DefaultFileUploadAdapter implements IFileUploadAdapter\n{\n    /**\n     * @summary Basic file upload adapter implementation for HTTP request form file consumption\n     * @param _serverEndpointUrl The API endpoint full qualified address that will receive a form file to process and return the metadata.\n     */\n    constructor(private _serverEndpointUrl: string, private _http: HttpClient) {\n    }\n\n    uploadFile(file: File, participantId: any): Observable<Message> {\n        const formData: FormData = new FormData();\n\n        //formData.append('ng-chat-sender-userid', currentUserId);\n        formData.append('ng-chat-participant-id', participantId);\n        formData.append('file', file, file.name);\n\n        return this._http.post<Message>(this._serverEndpointUrl, formData);\n\n        // TODO: Leaving this if we want to track upload progress in detail in the future. Might need a different Subject generic type wrapper\n        // const fileRequest = new HttpRequest('POST', this._serverEndpointUrl, formData, {\n        //     reportProgress: true\n        // });\n\n        // const uploadProgress = new Subject<number>();\n        // const uploadStatus = uploadProgress.asObservable();\n\n        //const responsePromise = new Subject<Message>();\n\n        // this._http\n        //     .request(fileRequest)\n        //     .subscribe(event => {\n        //         // if (event.type == HttpEventType.UploadProgress)\n        //         // {\n        //         //     const percentDone = Math.round(100 * event.loaded / event.total);\n\n        //         //     uploadProgress.next(percentDone);\n        //         // }\n        //         // else if (event instanceof HttpResponse)\n        //         // {\n                    \n        //         //     uploadProgress.complete();\n        //         // }\n        //     });\n    }\n}\n","import { Component, Input, OnInit, ViewChildren, ViewChild, HostListener, Output, EventEmitter, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { ChatAdapter } from './core/chat-adapter';\nimport { IChatGroupAdapter } from './core/chat-group-adapter';\nimport { User } from \"./core/user\";\nimport { ParticipantResponse } from \"./core/participant-response\";\nimport { Message } from \"./core/message\";\nimport { FileMessage } from \"./core/file-message\";\nimport { MessageType } from \"./core/message-type.enum\";\nimport { Window } from \"./core/window\";\nimport { ChatParticipantStatus } from \"./core/chat-participant-status.enum\";\nimport { ScrollDirection } from \"./core/scroll-direction.enum\";\nimport { Localization, StatusDescription } from './core/localization';\nimport { IChatController } from './core/chat-controller';\nimport { PagedHistoryChatAdapter } from './core/paged-history-chat-adapter';\nimport { IFileUploadAdapter } from './core/file-upload-adapter';\nimport { DefaultFileUploadAdapter } from './core/default-file-upload-adapter';\nimport { Theme } from './core/theme.enum';\nimport { IChatOption } from './core/chat-option';\nimport { Group } from \"./core/group\";\nimport { ChatParticipantType } from \"./core/chat-participant-type.enum\";\nimport { IChatParticipant } from \"./core/chat-participant\";\n\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'ng-chat',\n    templateUrl: 'ng-chat.component.html',\n    styleUrls: [\n        'assets/icons.css',\n        'assets/loading-spinner.css',\n        'assets/ng-chat.component.default.css',\n        'assets/themes/ng-chat.theme.default.scss',\n        'assets/themes/ng-chat.theme.dark.scss'\n    ],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class NgChat implements OnInit, IChatController {\n    constructor(public sanitizer: DomSanitizer, private _httpClient: HttpClient) { }\n\n    // Exposes enums for the ng-template\n    public ChatParticipantType = ChatParticipantType;\n    public ChatParticipantStatus = ChatParticipantStatus;\n    public MessageType = MessageType;\n\n    @Input()\n    public adapter: ChatAdapter;\n\n    @Input()\n    public groupAdapter: IChatGroupAdapter;\n\n    @Input()\n    public userId: any;\n\n    @Input()\n    public isCollapsed: boolean = false;\n\n    @Input()\n    public maximizeWindowOnNewMessage: boolean = true;\n\n    @Input()    \n    public pollFriendsList: boolean = false;\n\n    @Input()\n    public pollingInterval: number = 5000;\n\n    @Input()    \n    public historyEnabled: boolean = true;\n\n    @Input()    \n    public emojisEnabled: boolean = true;\n\n    @Input()    \n    public linkfyEnabled: boolean = true;\n\n    @Input()\n    public audioEnabled: boolean = true;\n\n    @Input()\n    public searchEnabled: boolean = true;\n\n    @Input() // TODO: This might need a better content strategy\n    public audioSource: string = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.wav';\n\n    @Input()\n    public persistWindowsState: boolean = true;\n\n    @Input()\n    public title: string = \"Friends\";\n\n    @Input()\n    public messagePlaceholder: string = \"Type a message\";\n\n    @Input()\n    public searchPlaceholder: string = \"Search\";\n\n    @Input()\n    public browserNotificationsEnabled: boolean = true;\n\n    @Input() // TODO: This might need a better content strategy\n    public browserNotificationIconSource: string = 'https://raw.githubusercontent.com/rpaschoal/ng-chat/master/src/ng-chat/assets/notification.png';\n\n    @Input()\n    public browserNotificationTitle: string = \"New message from\";\n    \n    @Input()\n    public historyPageSize: number = 10;\n\n    @Input()\n    public localization: Localization;\n\n    @Input()\n    public hideFriendsList: boolean = false;\n\n    @Input()\n    public hideFriendsListOnUnsupportedViewport: boolean = true;\n\n    @Input()\n    public fileUploadUrl: string;\n\n    @Input()\n    public theme: Theme = Theme.Light;\n\n    @Input()\n    public customTheme: string;\n\n    @Input()\n    public messageDatePipeFormat: string = \"short\";\n\n    @Input()\n    public showMessageDate: boolean = true;\n    \n    @Input()\n    public isViewportOnMobileEnabled: boolean = false;\n     \n    @Output()\n    public onParticipantClicked: EventEmitter<IChatParticipant> = new EventEmitter<IChatParticipant>();\n\n    @Output()\n    public onParticipantChatOpened: EventEmitter<IChatParticipant> = new EventEmitter<IChatParticipant>();\n\n    @Output()\n    public onParticipantChatClosed: EventEmitter<IChatParticipant> = new EventEmitter<IChatParticipant>();\n    \n    @Output()\n    public onMessagesSeen: EventEmitter<Message[]> = new EventEmitter<Message[]>();\n\n    private browserNotificationsBootstrapped: boolean = false;\n\n    public hasPagedHistory: boolean = false;\n\n    // Don't want to add this as a setting to simplify usage. Previous placeholder and title settings available to be used, or use full Localization object.\n    private statusDescription: StatusDescription = {\n        online: 'Online',\n        busy: 'Busy',\n        away: 'Away',\n        offline: 'Offline'\n    };\n\n    private audioFile: HTMLAudioElement;\n\n    public searchInput: string = '';\n\n    protected participants: IChatParticipant[];\n\n    protected participantsResponse: ParticipantResponse[];\n\n    private participantsInteractedWith: IChatParticipant[] = [];\n\n    public currentActiveOption: IChatOption | null;\n\n    protected selectedUsersFromFriendsList: User[] = [];\n\n    public defaultWindowOptions(currentWindow: Window): IChatOption[]\n    {\n        if (this.groupAdapter && currentWindow.participant.participantType == ChatParticipantType.User)\n        {\n            return [{\n                isActive: false,\n                action: (chattingWindow: Window) => {\n                    \n                    this.selectedUsersFromFriendsList = this.selectedUsersFromFriendsList.concat(chattingWindow.participant as User);\n                },\n                validateContext: (participant: IChatParticipant) => {\n                    return participant.participantType == ChatParticipantType.User;\n                },\n                displayLabel: 'Add People' // TODO: Localize this\n            }];\n        }\n\n        return [];\n    }\n\n    private get localStorageKey(): string \n    {\n        return `ng-chat-users-${this.userId}`; // Appending the user id so the state is unique per user in a computer.   \n    }; \n\n    get filteredParticipants(): IChatParticipant[]\n    {\n        if (this.searchInput.length > 0){\n            // Searches in the friend list by the inputted search string\n            return this.participants.filter(x => x.displayName.toUpperCase().includes(this.searchInput.toUpperCase()));\n        }\n\n        return this.participants;\n    }\n\n    // Defines the size of each opened window to calculate how many windows can be opened on the viewport at the same time.\n    public windowSizeFactor: number = 320;\n\n    // Total width size of the friends list section\n    public friendsListWidth: number = 262;\n\n    // Available area to render the plugin\n    private viewPortTotalArea: number;\n    \n    // Set to true if there is no space to display at least one chat window and 'hideFriendsListOnUnsupportedViewport' is true\n    public unsupportedViewport: boolean = false;\n\n    // File upload state\n    public fileUploadersInUse: string[] = []; // Id bucket of uploaders in use\n    public fileUploadAdapter: IFileUploadAdapter;\n\n    windows: Window[] = [];\n\n    isBootstrapped: boolean = false;\n\n    @ViewChildren('chatMessages') chatMessageClusters: any;\n\n    @ViewChildren('chatWindowInput') chatWindowInputs: any;\n\n    @ViewChildren('nativeFileInput') nativeFileInputs: ElementRef[];\n\n    ngOnInit() { \n        this.bootstrapChat();\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event: any){\n       this.viewPortTotalArea = event.target.innerWidth;\n\n       this.NormalizeWindows();\n    }\n\n    // Checks if there are more opened windows than the view port can display\n    private NormalizeWindows(): void\n    {\n        let maxSupportedOpenedWindows = Math.floor((this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) / this.windowSizeFactor);\n        let difference = this.windows.length - maxSupportedOpenedWindows;\n\n        if (difference >= 0){\n            this.windows.splice(this.windows.length - difference);\n        }\n\n        this.updateWindowsState(this.windows);\n\n        // Viewport should have space for at least one chat window but should show in mobile if option is enabled.\n        this.unsupportedViewport = this.isViewportOnMobileEnabled? false : this.hideFriendsListOnUnsupportedViewport && maxSupportedOpenedWindows < 1;\n    }\n\n    // Initializes the chat plugin and the messaging adapter\n    private bootstrapChat(): void\n    {\n        let initializationException = null;\n\n        if (this.adapter != null && this.userId != null)\n        {\n            try\n            {\n                this.viewPortTotalArea = window.innerWidth;\n\n                this.initializeTheme();\n                this.initializeDefaultText();\n                this.initializeBrowserNotifications();\n\n                // Binding event listeners\n                this.adapter.messageReceivedHandler = (participant, msg) => this.onMessageReceived(participant, msg);\n                this.adapter.friendsListChangedHandler = (participantsResponse) => this.onFriendsListChanged(participantsResponse);\n\n                // Loading current users list\n                if (this.pollFriendsList){\n                    // Setting a long poll interval to update the friends list\n                    this.fetchFriendsList(true);\n                    setInterval(() => this.fetchFriendsList(false), this.pollingInterval);\n                }\n                else\n                {\n                    // Since polling was disabled, a friends list update mechanism will have to be implemented in the ChatAdapter.\n                    this.fetchFriendsList(true);\n                }\n                \n                this.bufferAudioFile();\n\n                this.hasPagedHistory = this.adapter instanceof PagedHistoryChatAdapter;\n                \n                if (this.fileUploadUrl && this.fileUploadUrl !== \"\")\n                {\n                    this.fileUploadAdapter = new DefaultFileUploadAdapter(this.fileUploadUrl, this._httpClient);\n                }\n\n                this.isBootstrapped = true;\n            }\n            catch(ex)\n            {\n                initializationException = ex;\n            }\n        }\n\n        if (!this.isBootstrapped){\n            console.error(\"ng-chat component couldn't be bootstrapped.\");\n            \n            if (this.userId == null){\n                console.error(\"ng-chat can't be initialized without an user id. Please make sure you've provided an userId as a parameter of the ng-chat component.\");\n            }\n            if (this.adapter == null){\n                console.error(\"ng-chat can't be bootstrapped without a ChatAdapter. Please make sure you've provided a ChatAdapter implementation as a parameter of the ng-chat component.\");\n            }\n            if (initializationException)\n            {\n                console.error(`An exception has occurred while initializing ng-chat. Details: ${initializationException.message}`);\n                console.error(initializationException);\n            }\n        }\n    }\n\n    // Initializes browser notifications\n    private async initializeBrowserNotifications()\n    {\n        if (this.browserNotificationsEnabled && (\"Notification\" in window))\n        {\n            if (await Notification.requestPermission())\n            {\n                this.browserNotificationsBootstrapped = true;\n            }\n        }\n    }\n\n    // Initializes default text\n    private initializeDefaultText() : void\n    {\n        if (!this.localization)\n        {\n            this.localization = {\n                messagePlaceholder: this.messagePlaceholder,\n                searchPlaceholder: this.searchPlaceholder, \n                title: this.title,\n                statusDescription: this.statusDescription,\n                browserNotificationTitle: this.browserNotificationTitle,\n                loadMessageHistoryPlaceholder: \"Load older messages\"\n            };\n        }\n    }\n\n    private initializeTheme(): void\n    {\n        if (this.customTheme)\n        {\n            this.theme = Theme.Custom;\n        }\n        else if (this.theme != Theme.Light && this.theme != Theme.Dark)\n        {\n            // TODO: Use es2017 in future with Object.values(Theme).includes(this.theme) to do this check\n            throw new Error(`Invalid theme configuration for ng-chat. \"${this.theme}\" is not a valid theme value.`);\n        }\n    }\n\n    // Sends a request to load the friends list\n    private fetchFriendsList(isBootstrapping: boolean): void\n    {\n        this.adapter.listFriends()\n        .pipe(\n            map((participantsResponse: ParticipantResponse[]) => {\n                this.participantsResponse = participantsResponse;\n\n                this.participants = participantsResponse.map((response: ParticipantResponse) => {\n                    return response.participant;\n                });\n            })\n        ).subscribe(() => {\n            if (isBootstrapping)\n            {\n                this.restoreWindowsState();\n            }\n        });\n    }\n\n    fetchMessageHistory(window: Window) {\n        // Not ideal but will keep this until we decide if we are shipping pagination with the default adapter\n        if (this.adapter instanceof PagedHistoryChatAdapter)\n        {\n            window.isLoadingHistory = true;\n\n            this.adapter.getMessageHistoryByPage(window.participant.id, this.historyPageSize, ++window.historyPage)\n            .pipe(\n                map((result: Message[]) => {\n                    result.forEach((message) => this.assertMessageType(message));\n                    \n                    window.messages = result.concat(window.messages);\n                    window.isLoadingHistory = false;\n    \n                    const direction: ScrollDirection = (window.historyPage == 1) ? ScrollDirection.Bottom : ScrollDirection.Top;\n                    window.hasMoreMessages = result.length == this.historyPageSize;\n                    \n                    setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, direction, true));\n                })\n            ).subscribe();\n        }\n        else\n        {\n            this.adapter.getMessageHistory(window.participant.id)\n            .pipe(\n                map((result: Message[]) => {\n                    result.forEach((message) => this.assertMessageType(message));\n    \n                    window.messages = result.concat(window.messages);\n                    window.isLoadingHistory = false;\n    \n                    setTimeout(() => this.onFetchMessageHistoryLoaded(result, window, ScrollDirection.Bottom));\n                })\n            ).subscribe();\n        }\n    }\n\n    private onFetchMessageHistoryLoaded(messages: Message[], window: Window, direction: ScrollDirection, forceMarkMessagesAsSeen: boolean = false): void \n    {\n        this.scrollChatWindow(window, direction)\n\n        if (window.hasFocus || forceMarkMessagesAsSeen)\n        {\n            const unseenMessages = messages.filter(m => !m.dateSeen);\n\n            this.markMessagesAsRead(unseenMessages);\n            this.onMessagesSeen.emit(unseenMessages);\n        }\n    }\n\n    // Updates the friends list via the event handler\n    private onFriendsListChanged(participantsResponse: ParticipantResponse[]): void\n    {\n        if (participantsResponse) \n        {\n            this.participantsResponse = participantsResponse;\n\n            this.participants = participantsResponse.map((response: ParticipantResponse) => {\n                return response.participant;\n            });\n\n            this.participantsInteractedWith = [];\n        }\n    }\n\n    // Handles received messages by the adapter\n    private onMessageReceived(participant: IChatParticipant, message: Message)\n    {\n        if (participant && message)\n        {\n            let chatWindow = this.openChatWindow(participant);\n\n            this.assertMessageType(message);\n\n            if (!chatWindow[1] || !this.historyEnabled){\n                chatWindow[0].messages.push(message);\n\n                this.scrollChatWindow(chatWindow[0], ScrollDirection.Bottom);\n\n                if (chatWindow[0].hasFocus)\n                {\n                    this.markMessagesAsRead([message]);\n                    this.onMessagesSeen.emit([message]);\n                }\n            }\n\n            this.emitMessageSound(chatWindow[0]);\n            \n            // Github issue #58 \n            // Do not push browser notifications with message content for privacy purposes if the 'maximizeWindowOnNewMessage' setting is off and this is a new chat window.\n            if (this.maximizeWindowOnNewMessage || (!chatWindow[1] && !chatWindow[0].isCollapsed))\n            { \n                // Some messages are not pushed because they are loaded by fetching the history hence why we supply the message here\n                this.emitBrowserNotification(chatWindow[0], message);\n            }\n        }\n    }\n\n    // Opens a new chat whindow. Takes care of available viewport\n    // Works for opening a chat window for an user or for a group\n    // Returns => [Window: Window object reference, boolean: Indicates if this window is a new chat window]\n    public openChatWindow(participant: IChatParticipant, focusOnNewWindow: boolean = false, invokedByUserClick: boolean = false): [Window, boolean]\n    {\n        // Is this window opened?\n        let openedWindow = this.windows.find(x => x.participant.id == participant.id);\n\n        if (!openedWindow)\n        {\n            if (invokedByUserClick) \n            {\n                this.onParticipantClicked.emit(participant);\n            }\n\n            // Refer to issue #58 on Github \n            let collapseWindow = invokedByUserClick ? false : !this.maximizeWindowOnNewMessage;\n\n            let newChatWindow: Window = new Window(participant, this.historyEnabled, collapseWindow);\n\n            // Loads the chat history via an RxJs Observable\n            if (this.historyEnabled)\n            {\n                this.fetchMessageHistory(newChatWindow);\n            }\n\n            this.windows.unshift(newChatWindow);\n\n            // Is there enough space left in the view port ? but should be displayed in mobile if option is enabled\n            if (!this.isViewportOnMobileEnabled) {\n                if (this.windows.length * this.windowSizeFactor >= this.viewPortTotalArea - (!this.hideFriendsList ? this.friendsListWidth : 0)) {\n                    this.windows.pop();\n                }\n            }\n\n            this.updateWindowsState(this.windows);\n            \n            if (focusOnNewWindow && !collapseWindow) \n            {\n                this.focusOnWindow(newChatWindow);\n            }\n\n            this.participantsInteractedWith.push(participant);\n            this.onParticipantChatOpened.emit(participant);\n\n            return [newChatWindow, true];\n        }\n        else\n        {\n            // Returns the existing chat window     \n            return [openedWindow, false];       \n        }\n    }\n\n    // Focus on the input element of the supplied window\n    private focusOnWindow(window: Window, callback: Function = () => {}) : void\n    {\n        let windowIndex = this.windows.indexOf(window);\n        if (windowIndex >= 0)\n        {\n            setTimeout(() => {\n                if (this.chatWindowInputs)\n                {\n                    let messageInputToFocus = this.chatWindowInputs.toArray()[windowIndex];\n                \n                    messageInputToFocus.nativeElement.focus(); \n                }\n\n                callback(); \n            });\n        } \n    }\n\n    // Scrolls a chat window message flow to the bottom\n    private scrollChatWindow(window: Window, direction: ScrollDirection): void\n    {\n        if (!window.isCollapsed){\n            let windowIndex = this.windows.indexOf(window);\n            setTimeout(() => {\n                if (this.chatMessageClusters){\n                    let targetWindow = this.chatMessageClusters.toArray()[windowIndex];\n\n                    if (targetWindow)\n                    {\n                        let element = this.chatMessageClusters.toArray()[windowIndex].nativeElement;\n                        let position = ( direction === ScrollDirection.Top ) ? 0 : element.scrollHeight;\n                        element.scrollTop = position;\n                    }\n                }\n            }); \n        }\n    }\n\n    // Marks all messages provided as read with the current time.\n    public markMessagesAsRead(messages: Message[]): void\n    {\n        let currentDate = new Date();\n\n        messages.forEach((msg)=>{\n            msg.dateSeen = currentDate;\n        });\n    }\n\n    // Buffers audio file (For component's bootstrapping)\n    private bufferAudioFile(): void {\n        if (this.audioSource && this.audioSource.length > 0)\n        {\n            this.audioFile = new Audio();\n            this.audioFile.src = this.audioSource;\n            this.audioFile.load();\n        }\n    }\n\n    // Emits a message notification audio if enabled after every message received\n    private emitMessageSound(window: Window): void\n    {\n        if (this.audioEnabled && !window.hasFocus && this.audioFile) {\n            this.audioFile.play();\n        }\n    }\n\n    // Emits a browser notification\n    private emitBrowserNotification(window: Window, message: Message): void\n    {       \n        if (this.browserNotificationsBootstrapped && !window.hasFocus && message) {\n            let notification = new Notification(`${this.localization.browserNotificationTitle} ${window.participant.displayName}`, {\n                'body': message.message,\n                'icon': this.browserNotificationIconSource\n            });\n\n            setTimeout(() => {\n                notification.close();\n            }, message.message.length <= 50 ? 5000 : 7000); // More time to read longer messages\n        }\n    }\n\n    // Saves current windows state into local storage if persistence is enabled\n    private updateWindowsState(windows: Window[]): void\n    {\n        if (this.persistWindowsState)\n        {\n            let participantIds = windows.map((w) => {\n                return w.participant.id;\n            });\n\n            localStorage.setItem(this.localStorageKey, JSON.stringify(participantIds));\n        }\n    }\n\n    private restoreWindowsState(): void\n    {\n        try\n        {\n            if (this.persistWindowsState)\n            {\n                let stringfiedParticipantIds = localStorage.getItem(this.localStorageKey);\n\n                if (stringfiedParticipantIds && stringfiedParticipantIds.length > 0)\n                {\n                    let participantIds = <number[]>JSON.parse(stringfiedParticipantIds);\n\n                    let participantsToRestore = this.participants.filter(u => participantIds.indexOf(u.id) >= 0);\n\n                    participantsToRestore.forEach((participant) => {\n                        this.openChatWindow(participant);\n                    });\n                }\n            }\n        }\n        catch (ex)\n        {\n            console.error(`An error occurred while restoring ng-chat windows state. Details: ${ex}`);\n        }\n    }\n\n    // Gets closest open window if any. Most recent opened has priority (Right)\n    private getClosestWindow(window: Window): Window | undefined\n    {   \n        let index = this.windows.indexOf(window);\n\n        if (index > 0)\n        {\n            return this.windows[index - 1];\n        }\n        else if (index == 0 && this.windows.length > 1)\n        {   \n            return this.windows[index + 1];\n        }\n    }\n\n    private assertMessageType(message: Message): void {\n        // Always fallback to \"Text\" messages to avoid rendenring issues\n        if (!message.type)\n        {\n            message.type = MessageType.Text;\n        }\n    }\n\n    private formatUnreadMessagesTotal(totalUnreadMessages: number): string\n    {\n        if (totalUnreadMessages > 0){\n\n            if (totalUnreadMessages > 99) \n                return  \"99+\";\n            else\n                return String(totalUnreadMessages); \n        }\n\n        // Empty fallback.\n        return \"\";\n    }\n\n    // Returns the total unread messages from a chat window. TODO: Could use some Angular pipes in the future \n    unreadMessagesTotal(window: Window): string\n    {\n        let totalUnreadMessages = 0;\n\n        if (window){\n            totalUnreadMessages = window.messages.filter(x => x.fromId != this.userId && !x.dateSeen).length;\n        }\n            \n        return this.formatUnreadMessagesTotal(totalUnreadMessages);\n    }\n\n    unreadMessagesTotalByParticipant(participant: IChatParticipant): string\n    {\n        let openedWindow = this.windows.find(x => x.participant.id == participant.id);\n\n        if (openedWindow){\n            return this.unreadMessagesTotal(openedWindow);\n        }\n        else\n        {\n            let totalUnreadMessages = this.participantsResponse\n                .filter(x => x.participant.id == participant.id && !this.participantsInteractedWith.find(u => u.id == participant.id) && x.metadata && x.metadata.totalUnreadMessages > 0)\n                .map((participantResponse) => {\n                    return participantResponse.metadata.totalUnreadMessages\n                })[0];\n\n            return this.formatUnreadMessagesTotal(totalUnreadMessages);\n        }\n    }\n\n    /*  Monitors pressed keys on a chat window\n        - Dispatches a message when the ENTER key is pressed\n        - Tabs between windows on TAB or SHIFT + TAB\n        - Closes the current focused window on ESC\n    */\n    onChatInputTyped(event: any, window: Window): void\n    {\n        switch (event.keyCode)\n        {\n            case 13:\n                if (window.newMessage && window.newMessage.trim() != \"\")\n                {\n                    let message = new Message();\n             \n                    message.fromId = this.userId;\n                    message.toId = window.participant.id;\n                    message.message = window.newMessage;\n                    message.dateSent = new Date();\n        \n                    window.messages.push(message);\n        \n                    this.adapter.sendMessage(message);\n        \n                    window.newMessage = \"\"; // Resets the new message input\n        \n                    this.scrollChatWindow(window, ScrollDirection.Bottom);\n                }\n                break;\n            case 9:\n                event.preventDefault();\n                \n                let currentWindowIndex = this.windows.indexOf(window);\n                let messageInputToFocus = this.chatWindowInputs.toArray()[currentWindowIndex + (event.shiftKey ? 1 : -1)]; // Goes back on shift + tab\n\n                if (!messageInputToFocus)\n                {\n                    // Edge windows, go to start or end\n                    messageInputToFocus = this.chatWindowInputs.toArray()[currentWindowIndex > 0 ? 0 : this.chatWindowInputs.length - 1]; \n                }\n\n                messageInputToFocus.nativeElement.focus();\n\n                break;\n            case 27:\n                let closestWindow = this.getClosestWindow(window);\n\n                if (closestWindow)\n                {\n                    this.focusOnWindow(closestWindow, () => { this.onCloseChatWindow(window); });\n                }\n                else\n                {\n                    this.onCloseChatWindow(window);\n                }\n        }\n    }\n\n    // Closes a chat window via the close 'X' button\n    onCloseChatWindow(window: Window): void \n    {\n        let index = this.windows.indexOf(window);\n\n        this.windows.splice(index, 1);\n\n        this.updateWindowsState(this.windows);\n\n        this.onParticipantChatClosed.emit(window.participant);\n    }\n\n    // Toggle friends list visibility\n    onChatTitleClicked(event: any): void\n    {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    // Toggles a chat window visibility between maximized/minimized\n    onChatWindowClicked(window: Window): void\n    {\n        window.isCollapsed = !window.isCollapsed;\n        this.scrollChatWindow(window, ScrollDirection.Bottom);\n    }\n\n    // Asserts if a user avatar is visible in a chat cluster\n    isAvatarVisible(window: Window, message: Message, index: number): boolean\n    {\n        if (message.fromId != this.userId){\n            if (index == 0){\n                return true; // First message, good to show the thumbnail\n            }\n            else{\n                // Check if the previous message belongs to the same user, if it belongs there is no need to show the avatar again to form the message cluster\n                if (window.messages[index - 1].fromId != message.fromId){\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    getChatWindowAvatar(participant: IChatParticipant, message: Message): string | null\n    {\n        if (participant.participantType == ChatParticipantType.User)\n        {\n            return participant.avatar;\n        }\n        else if (participant.participantType == ChatParticipantType.Group)\n        {\n            let group = participant as Group;\n            let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\n\n            return group.chattingTo[userIndex >= 0 ? userIndex : 0].avatar;\n        }\n\n        return null;\n    }\n\n    // Toggles a window focus on the focus/blur of a 'newMessage' input\n    toggleWindowFocus(window: Window): void\n    {\n        window.hasFocus = !window.hasFocus;\n        if(window.hasFocus) {\n            const unreadMessages = window.messages\n                .filter(message => message.dateSeen == null \n                    && (message.toId == this.userId || window.participant.participantType === ChatParticipantType.Group));\n            \n            if (unreadMessages && unreadMessages.length > 0)\n            {\n                this.markMessagesAsRead(unreadMessages);\n                this.onMessagesSeen.emit(unreadMessages);\n            }\n        }\n    }\n\n    // [Localized] Returns the status descriptive title\n    getStatusTitle(status: ChatParticipantStatus) : any\n    {\n        let currentStatus = status.toString().toLowerCase();\n\n        return this.localization.statusDescription[currentStatus];\n    }\n\n    triggerOpenChatWindow(user: User): void {\n        if (user)\n        {\n            this.openChatWindow(user);\n        }\n    }\n\n    triggerCloseChatWindow(userId: any): void {\n        let openedWindow = this.windows.find(x => x.participant.id == userId);\n\n        if (openedWindow){\n            this.onCloseChatWindow(openedWindow);\n        }\n    }\n\n    triggerToggleChatWindowVisibility(userId: any): void {\n        let openedWindow = this.windows.find(x => x.participant.id == userId);\n\n        if (openedWindow){\n            this.onChatWindowClicked(openedWindow);\n        }\n    }\n\n    // Generates a unique file uploader id for each participant\n    getUniqueFileUploadInstanceId(window: Window): string\n    {\n        if (window && window.participant)\n        {\n            return `ng-chat-file-upload-${window.participant.id}`;\n        }\n        \n        return 'ng-chat-file-upload';\n    }\n\n    // Triggers native file upload for file selection from the user\n    triggerNativeFileUpload(window: Window): void\n    {\n        if (window)\n        {\n            const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\n            const uploadElementRef = this.nativeFileInputs.filter(x => x.nativeElement.id === fileUploadInstanceId)[0];\n\n            if (uploadElementRef)\n            uploadElementRef.nativeElement.click();\n        }\n    }\n\n    private clearInUseFileUploader(fileUploadInstanceId: string): void\n    {\n        const uploaderInstanceIdIndex = this.fileUploadersInUse.indexOf(fileUploadInstanceId);\n\n        if (uploaderInstanceIdIndex > -1) {\n            this.fileUploadersInUse.splice(uploaderInstanceIdIndex, 1);\n        }\n    }\n\n    isUploadingFile(window: Window): boolean\n    {\n        const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\n\n        return this.fileUploadersInUse.indexOf(fileUploadInstanceId) > -1;\n    }\n\n    // Handles file selection and uploads the selected file using the file upload adapter\n    onFileChosen(window: Window): void {\n        const fileUploadInstanceId = this.getUniqueFileUploadInstanceId(window);\n        const uploadElementRef = this.nativeFileInputs.filter(x => x.nativeElement.id === fileUploadInstanceId)[0];\n\n        if (uploadElementRef)\n        {\n            const file: File = uploadElementRef.nativeElement.files[0];\n\n            this.fileUploadersInUse.push(fileUploadInstanceId);\n\n            this.fileUploadAdapter.uploadFile(file, window.participant.id)\n                .subscribe(fileMessage => {\n                    this.clearInUseFileUploader(fileUploadInstanceId);\n\n                    fileMessage.fromId = this.userId;\n\n                    // Push file message to current user window   \n                    window.messages.push(fileMessage);\n        \n                    this.adapter.sendMessage(fileMessage);\n        \n                    this.scrollChatWindow(window, ScrollDirection.Bottom);\n\n                    // Resets the file upload element\n                    uploadElementRef.nativeElement.value = '';\n                }, (error) => {\n                    this.clearInUseFileUploader(fileUploadInstanceId);\n\n                    // Resets the file upload element\n                    uploadElementRef.nativeElement.value = '';\n\n                    // TODO: Invoke a file upload adapter error here\n                });\n        }\n    }\n    \n    onFriendsListCheckboxChange(selectedUser: User, isChecked: boolean): void\n    {\n        if(isChecked) {\n            this.selectedUsersFromFriendsList.push(selectedUser);\n        } \n        else \n        {\n            this.selectedUsersFromFriendsList.splice(this.selectedUsersFromFriendsList.indexOf(selectedUser), 1);\n        }\n    }\n\n    onFriendsListActionCancelClicked(): void\n    {\n        if (this.currentActiveOption)\n        {\n            this.currentActiveOption.isActive = false;\n            this.currentActiveOption = null;\n            this.selectedUsersFromFriendsList = [];\n        }\n    }\n\n    onFriendsListActionConfirmClicked() : void\n    {\n        let newGroup = new Group(this.selectedUsersFromFriendsList);\n\n        this.openChatWindow(newGroup);\n\n        if (this.groupAdapter)\n        {\n            this.groupAdapter.groupCreated(newGroup);\n        }\n\n        // Canceling current state\n        this.onFriendsListActionCancelClicked();\n    }\n\n    isUserSelectedFromFriendsList(user: User) : boolean\n    {\n        return (this.selectedUsersFromFriendsList.filter(item => item.id == user.id)).length > 0\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nlet emojiDictionary = [\n    { patterns: [':)', ':-)', '=)'], unicode: 'ð' },\n    { patterns: [':D', ':-D', '=D'], unicode: 'ð' },\n    { patterns: [':(', ':-(', '=('], unicode: 'ð' },\n    { patterns: [':|', ':-|', '=|'], unicode: 'ð' },\n    { patterns: [':*', ':-*', '=*'], unicode: 'ð' },\n    { patterns: ['T_T', 'T.T'], unicode: 'ð­' },\n    { patterns: [':O', ':-O', '=O', ':o', ':-o', '=o'], unicode: 'ð®' },\n    { patterns: [':P', ':-P', '=P', ':p', ':-p', '=p'], unicode: 'ð' },\n    { patterns: ['>.<'], unicode: 'ð£' },\n    { patterns: ['@.@'], unicode: 'ðµ' },\n    { patterns: ['*.*'], unicode: 'ð' },\n    { patterns: ['<3'], unicode: 'â¤ï¸' },\n    { patterns: ['^.^'], unicode: 'ð' },\n    { patterns: [':+1'], unicode: 'ð' },\n    { patterns: [':-1'], unicode: 'ð' }\n];\n\n/*\n * Transforms common emoji text to UTF encoded emojis\n*/\n@Pipe({name: 'emojify'})\nexport class EmojifyPipe implements PipeTransform {\n    transform(message: string, pipeEnabled: boolean): string {\n        if (pipeEnabled && message && message.length > 1) {  \n            emojiDictionary.forEach(emoji => {\n                emoji.patterns.forEach(pattern => {\n                    message = message.replace(pattern, emoji.unicode);\n                })\n            });\n        }\n\n    return message;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/*\n * Transforms text containing URLs or E-mails to valid links/mailtos\n*/\n@Pipe({name: 'linkfy'})\nexport class LinkfyPipe implements PipeTransform {\n    transform(message: string, pipeEnabled: boolean): string {\n        if (pipeEnabled && message && message.length > 1)\n        {\n            let replacedText;\n            let replacePatternProtocol;\n            let replacePatternWWW;\n            let replacePatternMailTo;\n\n            // URLs starting with http://, https://, or ftp://\n            replacePatternProtocol = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/gim;\n            replacedText = message.replace(replacePatternProtocol, '<a href=\"$1\" target=\"_blank\">$1</a>');\n\n            // URLs starting with \"www.\" (ignoring // before it).\n            replacePatternWWW = /(^|[^\\/])(www\\.[\\S]+(\\b|$))/gim;\n            replacedText = replacedText.replace(replacePatternWWW, '$1<a href=\"http://$2\" target=\"_blank\">$2</a>');\n\n            // Change email addresses to mailto:: links.\n            replacePatternMailTo = /(([a-zA-Z0-9\\-\\_\\.])+@[a-zA-Z\\_]+?(\\.[a-zA-Z]{2,6})+)/gim;\n            replacedText = replacedText.replace(replacePatternMailTo, '<a href=\"mailto:$1\">$1</a>');\n\n            return replacedText;\n        }\n        else\n            return message;\n    } \n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Group } from \"../core/group\";\nimport { ChatParticipantType } from \"../core/chat-participant-type.enum\";\nimport { IChatParticipant } from \"../core/chat-participant\";\nimport { Message } from \"../core/message\";\n\n/*\n * Renders the display name of a participant in a group based on who's sent the message\n*/\n@Pipe({name: 'groupMessageDisplayName'})\nexport class GroupMessageDisplayNamePipe implements PipeTransform {\n    transform(participant: IChatParticipant, message: Message): string {\n        if (participant && participant.participantType == ChatParticipantType.Group)\n        {\n            let group = participant as Group;\n            let userIndex = group.chattingTo.findIndex(x => x.id == message.fromId);\n\n            return group.chattingTo[userIndex >= 0 ? userIndex : 0].displayName;\n        }\n        else\n            return \"\";\n    } \n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Window } from '../../core/window';\nimport { IChatOption } from '../../core/chat-option';\n\n@Component({\n    selector: 'ng-chat-options',\n    templateUrl: './ng-chat-options.component.html',\n    styleUrls: ['./ng-chat-options.component.css']\n})\nexport class NgChatOptionsComponent implements OnInit {\n\n  constructor() { }\n\n  @Input()\n  public options: IChatOption[];\n\n  @Input()\n  public activeOptionTracker: IChatOption;\n\n  @Output()\n  public activeOptionTrackerChange: EventEmitter<IChatOption> = new EventEmitter<IChatOption>();\n\n  @Input()\n  public chattingTo: Window;\n\n  ngOnInit() {\n  }\n\n  onOptionClicked(option: IChatOption): void\n  {\n      if (option.action)\n      {\n          option.isActive = true;\n          option.action(this.chattingTo);\n          this.activeOptionTrackerChange.emit(option);\n      }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NgChat } from './ng-chat.component';\nimport { EmojifyPipe } from './pipes/emojify.pipe';\nimport { LinkfyPipe } from './pipes/linkfy.pipe';\nimport { GroupMessageDisplayNamePipe } from './pipes/group-message-display-name.pipe';\nimport { NgChatOptionsComponent } from './components/ng-chat-options/ng-chat-options.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, HttpClientModule],\n  declarations: [NgChat, EmojifyPipe, LinkfyPipe, GroupMessageDisplayNamePipe, NgChatOptionsComponent],\n  exports: [NgChat]\n})\nexport class NgChatModule {\n}\n"],"names":["tslib_1.__extends","EventEmitter","map","Component","ViewEncapsulation","DomSanitizer","HttpClient","Input","Output","ViewChildren","HostListener","Pipe","NgModule","CommonModule","FormsModule","HttpClientModule"],"mappings":"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"}
